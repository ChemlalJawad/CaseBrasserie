// <auto-generated />
using CaseBrasserie.Infrastructure.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CaseBrasserie.Infrastructure.Migrations
{
    [DbContext(typeof(BrasserieContext))]
    partial class BrasserieContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CaseBrasserie.Core.Entities.Biere", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BrasserieId")
                        .HasColumnType("int");

                    b.Property<float>("DegreAlcool")
                        .HasColumnType("real");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BrasserieId");

                    b.ToTable("Bieres");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrasserieId = 1,
                            DegreAlcool = 6.6f,
                            Nom = "Leffe Blonde",
                            Prix = 2.20m
                        },
                        new
                        {
                            Id = 2,
                            BrasserieId = 2,
                            DegreAlcool = 9f,
                            Nom = "Chimay Bleue",
                            Prix = 3.50m
                        },
                        new
                        {
                            Id = 3,
                            BrasserieId = 2,
                            DegreAlcool = 7f,
                            Nom = "Chimay Rouge",
                            Prix = 3.00m
                        });
                });

            modelBuilder.Entity("CaseBrasserie.Core.Entities.Brasserie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Brasseries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "Abbaye de Leffe"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "Brasserie de Chimay"
                        });
                });

            modelBuilder.Entity("CaseBrasserie.Core.Entities.Grossiste", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Grossistes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nom = "GeneDrinks"
                        },
                        new
                        {
                            Id = 2,
                            Nom = "BiereImport"
                        });
                });

            modelBuilder.Entity("CaseBrasserie.Core.Entities.GrossisteBiere", b =>
                {
                    b.Property<int>("BiereId")
                        .HasColumnType("int");

                    b.Property<int>("GrossisteId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("BiereId", "GrossisteId");

                    b.HasIndex("GrossisteId");

                    b.ToTable("GrossistesBieres");

                    b.HasData(
                        new
                        {
                            BiereId = 1,
                            GrossisteId = 1,
                            Stock = 100
                        },
                        new
                        {
                            BiereId = 2,
                            GrossisteId = 1,
                            Stock = 80
                        },
                        new
                        {
                            BiereId = 2,
                            GrossisteId = 2,
                            Stock = 120
                        },
                        new
                        {
                            BiereId = 3,
                            GrossisteId = 2,
                            Stock = 90
                        });
                });

            modelBuilder.Entity("CaseBrasserie.Core.Entities.Biere", b =>
                {
                    b.HasOne("CaseBrasserie.Core.Entities.Brasserie", "Brasserie")
                        .WithMany("Bieres")
                        .HasForeignKey("BrasserieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brasserie");
                });

            modelBuilder.Entity("CaseBrasserie.Core.Entities.GrossisteBiere", b =>
                {
                    b.HasOne("CaseBrasserie.Core.Entities.Biere", "Biere")
                        .WithMany("GrossistesBieres")
                        .HasForeignKey("BiereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CaseBrasserie.Core.Entities.Grossiste", "Grossiste")
                        .WithMany("GrossistesBieres")
                        .HasForeignKey("GrossisteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Biere");

                    b.Navigation("Grossiste");
                });

            modelBuilder.Entity("CaseBrasserie.Core.Entities.Biere", b =>
                {
                    b.Navigation("GrossistesBieres");
                });

            modelBuilder.Entity("CaseBrasserie.Core.Entities.Brasserie", b =>
                {
                    b.Navigation("Bieres");
                });

            modelBuilder.Entity("CaseBrasserie.Core.Entities.Grossiste", b =>
                {
                    b.Navigation("GrossistesBieres");
                });
#pragma warning restore 612, 618
        }
    }
}
